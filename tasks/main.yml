---
- name: install packages
  apt:
    name: "{{ packages }}"
    state: latest
    dpkg_options: 'force-confnew,force-confdef'
    autoclean: yes
    autoremove: yes
    update_cache: yes
    cache_valid_time: 3600
  vars:
    packages:
    - curl
    - openssh-server
    - ca-certificates
    - expect

- name: add gitlab key
  apt_key:
    url: https://packages.gitlab.com/gitlab/gitlab-ce/gpgkey
    state: present

- name: add gitlab repo
  apt_repository:
    repo: "deb https://packages.gitlab.com/gitlab/gitlab-ce/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release | lower }} main"
    filename: gitlab
    state: present
    update_cache: yes

- name: add gitlab src-repo
  apt_repository:
    repo: "deb-src https://packages.gitlab.com/gitlab/gitlab-ce/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release | lower }} main"
    filename: gitlab
    state: present
    update_cache: yes

#- name: add gitlab package server
#  shell: curl -sS https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.deb.sh | bash

- name: install gitlab
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - gitlab-ce
  notify: gitlab reconfigure

- name: set initial root password
  include: initial_root_password.yml
  when: gitlab_initial_root_password is defined

- name: flush the gitlab reconfigure handler
  meta: flush_handlers

- name: set http urls
  include: http.yml
  when: gitlab_use_https == False

- name: set https urls and certificates
  include: https.yml
  when: gitlab_use_https == True

- name: setup mattermost
  include: mattermost.yml
  when: gitlab_activate_mattermost == True

- name: configure prometheus
  include: prometheus.yml

- name: set custom nginx config
  include: custom_nginx_config.yml
  when: gitlab_custom_nginx_config is defined

- name: set additional configs
  include: additional_configs.yml
  when: gitlab_additional_configs is defined

- name: flush the gitlab reconfigure handler
  meta: flush_handlers

# Pause for 15 seconds to let unicorn restart
- name: wait for 15 seconds
  pause:
    seconds: 30
- name: restart gitlab
  command: gitlab-ctl restart

- name: configure signup
  shell: expect -c 'spawn gitlab-rails console production;
                    expect "%s";
                    send "x = ApplicationSetting.first\r";
                    expect "%s";
                    send "x.signup_enabled = false\r";
                    expect "%s";
                    send "x.save!\r";
                    expect "%s";
                    send "^D"'
  args:
    executable: /bin/bash
  when: gitlab_disable_signup

...
