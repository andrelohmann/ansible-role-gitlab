---

- name: Mattermost | Add mattermost backup script
  ansible.builtin.template:
    src: mattermost-backup.sh.j2
    dest: /etc/mattermost-backup.sh
    owner: root
    group: root
    mode: 0700
  when: gitlab_mattermost_backup_dir is defined

- name: Mattermost | Create mattermost backup dir
  ansible.builtin.file:
    path: "{{ gitlab_mattermost_backup_dir }}"
    state: directory
    owner: root
    group: root
    mode: 0770
  when: gitlab_mattermost_backup_dir is defined

- name: Mattermost | Enable mattermost
  ansible.builtin.lineinfile:
    path: /etc/gitlab/gitlab.rb
    regexp: "^mattermost\\['enable'\\] ="
    insertafter: "^# mattermost\\['enable'\\] ="
    line: "mattermost['enable'] = true"
  notify: Gitlab reconfigure

- name: Mattermost | Set mattermost_external_url
  ansible.builtin.lineinfile:
    path: /etc/gitlab/gitlab.rb
    regexp: 'mattermost_external_url '
    line: "mattermost_external_url '{{ gitlab_mattermost_external_url }}'"
  notify: Gitlab reconfigure

- name: Mattermost | Flush the gitlab reconfigure handler before manipulation the mattermost config
  ansible.builtin.meta: flush_handlers

- name: Mattermost | Read Mattermost JSON file
  ansible.builtin.command: cat /var/opt/gitlab/mattermost/config.json
  register: _mattermost_json
  changed_when: false

- name: Mattermost | Alternate the mattermost json
  ansible.builtin.set_fact:
    mattermost_json: "{{ (_mattermost_json.stdout | from_json) | combine(gitlab_mattermost_additional_configs, recursive=True) }}"

- name: Mattermost | Write back to object
  ansible.builtin.copy:
    content: "{{ mattermost_json | to_nice_json }}"
    dest: /var/opt/gitlab/mattermost/config.json
    owner: mattermost
    group: root
    mode: 0644

...
