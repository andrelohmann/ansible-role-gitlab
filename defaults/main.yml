---

gitlab_release: latest  # e.g. 16.7.0-ce.0
gitlab_ee: true  # install gitlab-ee or gitlab-ce

# If an external postgresql database is used,
# install psql and pg_dump reflecting the correct version
# and set the command paths regardingly
# gitlab_postgresql_psql_path: /usr/bin/psql
# gitlab_postgresql_pg_dump_path: /usr/bin/pg_dump
gitlab_postgresql_psql_path: false
gitlab_postgresql_pg_dump_path: false

# Run reconfigure as installation step
gitlab_run_reconfigure: true

# Set an initial root password at the first ansible run
# Password must be 8+ chars
# gitlab_initial_root_password: __INITIAL_ROOT_PASSWORD__

# Set the configs for gitlab.rb
gitlab_config: []
# gitlab_config:
# Set the URL
# - namespace: external_url
#   value: "'http://gitlab.lokal'"
# Enable the docker registry
# - namespace: registry_external_url
#   value: "'http://docker.lokal'"
# - namespace: registry
#   key: enable
#   value: "true"
# Set the mailpit catch all data
# - namespace: gitlab_rails
#   key: gitlab_email_from
#   value: "'gitlab@example.com'"
# - namespace: gitlab_rails
#   key: gitlab_email_reply_to
#   value: "'gitlab@example.com'"
# - namespace: gitlab_rails
#   key: smtp_enable
#   value: "true"
# - namespace: gitlab_rails
#   key: smtp_address
#   value: "'localhost'"
# - namespace: gitlab_rails
#   key: smtp_port
#   value: 8025
# Set external redis
# - namespace: redis
#   key: enable
#   value: "false"
# - namespace: gitlab_rails
#   key: redis_host
#   value: "'localhost'"
# - namespace: gitlab_rails
#   key: redis_port
#   value: "6379"
# - namespace: gitlab_rails
#   key: redis_password
#   value: "'r3dis.S3cr3t'"
# Set external postgres
# - namespace: postgresql
#   key: enable
#   value: "false"
# - namespace: gitlab_rails
#   key: db_adapter
#   value: "'postgresql'"
# - namespace: gitlab_rails
#   key: db_encoding
#   value: "'utf8'"
# - namespace: gitlab_rails
#   key: db_host
#   value: "'localhost'"
# - namespace: gitlab_rails
#   key: db_port
#   value: "5432"
# - namespace: gitlab_rails
#   key: db_database
#   value: "'gitlab'"
# - namespace: gitlab_rails
#   key: db_username
#   value: "'gitlab'"
# - namespace: gitlab_rails
#   key: db_password
#   value: "'gitlab'"
# Enable backups to S3
# - namespace: gitlab_rails
#   key: backup_upload_connection
#   block: |
#     gitlab_rails['backup_upload_connection'] = {
#       'provider' => 'AWS',
#       'region' => 'eu-central-1',
#       'aws_access_key_id' => 'XXXXXXXXX',
#       'aws_secret_access_key' => 'XXXXXXXXX',
#       # # If IAM profile use is enabled, remove aws_access_key_id and aws_secret_access_key
#       'use_iam_profile' => false
#     }
# - namespace: gitlab_rails
#   key: backup_upload_remote_directory
#   value: "'__backup_upload_remote_directory__'"
# Set the repositories data dir
# ATTENTION - this is a depricated config
# Use gitaly['configuration'] instead
# https://docs.gitlab.com/ee/administration/reference_architectures/2k_users.html#configure-gitaly
# - namespace: git_data_dirs
#   regexp: "^# git_data_dirs"
#   block: |
#     git_data_dirs({
#       "default" => {
#         "path" => "/var/opt/gitlab/git-data"
#       }
#     })
# Install and configure mattermost
# gitlab_mattermost_external_url: http://chat.lokal
# gitlab_mattermost_additional_configs:
#   TeamSettings:
#     SiteName: "chat.example.com"
#   EmailSettings:
#     EnableSignUpWithEmail: False
#     EnableSignInWithEmail: False
#     EnableSignInWithUsername: False
#     SendEmailNotifications: True
#     UseChannelInEmailNotifications: True
#     FeedbackName: "chat.example.com"
#     FeedbackEmail: "gitlab@example.com"
#     SMTPUsername: "gitlab@example.com"
#     SMTPServer: "localhost"
#     SMTPPort: "25"
# gitlab_mattermost_backup_dir: /var/archives/mattermost

...
